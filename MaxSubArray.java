public class MaxSubArray{
    int maxSubmatrix(int[][] arr, int subMatrixSize){
        int sum =  Integer.MIN_VALUE;
        int row = arr.length;
        int col = row;
        int length = (row-subMatrixSize)+1;
        int sumArr[][] = new int[row][length];
        int colSumArr[][] = new int[length][length];
        for(int i=0; i<row; i++){
            for(int j=0; j<subMatrixSize; j++){
                sumArr[i][0] += arr[i][j];
            }
        }
        int k =1;
        for(int i=0; i<row; i++){
            for(int j=subMatrixSize; j<col; j++){
                sumArr[i][k] = sumArr[i][k-1] - arr[i][j-subMatrixSize];
                sumArr[i][k] = sumArr[i][k] + arr[i][j];
                k++;
            }
            k = 1;
        }
        for(int j=0; j<length; j++){
            int temp = 0;
            for(int i=0; i<subMatrixSize; i++){
                colSumArr[0][j] += sumArr[i][j];
                temp = colSumArr[0][j];
            }
            if(temp > sum){
                sum = temp;
            }
        }
        int l = 1;
        for(int j=0; j<length; j++){
            int temp = 0;
            for(int i=subMatrixSize; i<row; i++){
                colSumArr[l][j] = colSumArr[l-1][j] - sumArr[i-subMatrixSize][j];
                colSumArr[l][j] = colSumArr[l][j] + sumArr[i][j];
                temp = colSumArr[l][j];
                l++;
                if(temp > sum){
                    sum = temp;
                }
            }
            l = 1;
        }
        return sum;
    }
    public static void main(String args[]){
        int arr[][] = {
            {-33, 34, 0, 69, 24, -22, 58, 62, -36, 5, 45, -19, -73, 61, -9, 95},
            {42, -73, -64, 91, -96, 2, 53, -8, 82, -79, 16, 18, -5, -53, 26, 71},
            {38, -31, 12, -33, -1, -65, -6, 3, -89, 22, 33, -27, -36, 41, 11, -47},
            {-32, 47, -56, -38, 57, -63, -41, 23, 41, 29, 78, 16, -65, 90, -58, -12},
            {6, -60, 42, -36, -52, -54, -95, -10, 29, 70, 50, -94, 1, 93, 48, -71},
            {-77, -16, 54, 56, -60, 66, 76, 31, 8, 44, -61, -74, 23, 37, 38, 18},
            {-18, 29, 41, -67, 15, -61, -42, 4, 30, 77, 6, -27, 86, -79, 45, 24},
            {-28, -30, -71, 77, 73, -3, 12, 86, -10, 61, -64, 55, 67, -45, 74, -69},
            {-48, 50, 50, 41, 24, 66, -70, 7, 91, -93, 37, -43, -13, 53, 83, 45},
            {9, -91, 58, -79, 88, -78, 46, 6, -70, -87, 68, 0, 91, 62, -45, -90},
            {59, -76, 37, 48, -17, 95, -59, -98, 50, -9, -64, 74, -80, 96, -79, 48},
            {99, -32, -16, -19, 34, -47, 99, -82, 38, 0, 88, 27, -33, 28, -7, -52},
            {-17, -93, -79, 10, -83, -87, 14, 9, -84, 35, -49, -100, -51, 19, 56, 98},
            {3, -76, -92, -56, -91, 89, 2, 95, -15, -7, 43, 23, 87, 14, 3, -52},
            {-100, -42, -82, 80, 96, 98, -19, 89, 98, -91, 57, -28, -78, 38, -8, -62},
            {79, 90, -43, 58, 91, -85, -12, 56, 11, -98, -66, -28, -45, 28, -54, 62}
        };
        int subMatrixSize = 7;
        // int arr[][] = {
        //     {-50, 73, -34, -56, -41, -8, -61, -47, -76, 54, 10, 45, -51, 86, 13, -26, -78, 68, -82, 87},
        //     {5, 58, 91, -98, -75, -23, -86, 14, -76, 34, -26, 72, 59, -67, -30, -13, -3, 18, 77, 73},
        //     {-30, 63, -32, 92, 85, 2, -20, -87, -73, -98, -1, 27, -75, 43, 24, -77, 72, -39, 81, -97},
        //     {-68, 5, 93, 25, -69, -8, 42, -78, -14, -36, 0, 87, 60, -87, 74, -30, 70, -65, -67, 11},
        //     {60, -4, -33, -15, 50, 40, -6, -5, -76, -81, 25, 76, -6, -42, 2, 71, -34, -22, 93, -49},
        //     {-16, -82, -36, 19, 52, -100, -13, -40, 26, -90, 57, 70, 15, 76, -73, -57, 58, 64, 9, -18},
        //     {-14, 65, -13, 77, -26, -75, -73, -71, 28, -77, 20, 2, 62, 23, 96, 37, -39, 95, 25, -36},
        //     {-40, -98, 16, -70, 26, -89, 71, -89, 47, 53, 20, 90, 24, 88, 63, 40, -49, -38, -71, 0},
        //     {13, 58, 78, 65, -93, -23, -100, -42, -61, 3, 60, 57, 24, -23, 8, 13, -13, -99, -50, -40},
        //     {-72, 93, 84, -95, 40, 11, 4, -65, 56, -28, 50, -77, -15, 56, -84, -74, 57, 26, 57, 37},
        //     {-29, -31, 61, -4, -78, -83, 12, 17, -4, 85, -59, -77, 29, -71, 65, 59, 32, -4, -45, -47},
        //     {62, 84, 34, -46, 72, -43, 69, 32, 63, -93, -17, 11, -65, -33, -52, -25, 38, -77, 42, 54},
        //     {11, 41, 75, -41, -75, -79, -30, -74, 34, -95, 83, -50, 98, -21, 1, 93, 34, -63, 34, 56},
        //     {93, 76, 5, 62, 48, -19, 0, -87, -59, -45, -45, 42, -38, -89, -23, -76, -22, 52, -57, -4},
        //     {-27, -60, 13, -25, -28, -82, -90, -83, 32, 12, -5, 69, -69, -60, -12, -15, -10, -3, 89, 90},
        //     {45, 53, 14, -49, 40, -56, -42, 35, 59, 92, -95, -36, 81, 3, -71, 75, -92, -8, 97, 49},
        //     {56, 61, -73, -33, 41, 29, -60, -87, 74, -99, -23, -85, -17, -87, 92, -76, -99, 92, 59, -30},
        //     {-72, -73, -16, -25, 86, -2, 70, -13, -53, -96, 3, -79, -37, 6, 63, -90, 71, -11, -60, 64},
        //     {42, -81, 13, 91, 4, -82, -68, 50, -95, 75, 39, 3, -78, -2, -53, 84, -52, 71, -36, 13},
        //     {-25, 45, 12, 46, -22, 69, -38, 19, 85, -11, 44, -35, 40, -55, 8, 18, -30, -99, 23, 32}
        // };
        // int subMatrixSize = 13;
        MaxSubArray obj = new MaxSubArray();
        System.out.println(obj.maxSubmatrix(arr, subMatrixSize));
    }
}